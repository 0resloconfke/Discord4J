plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'com.jfrog.artifactory' version '4.4.4'
    id 'com.gorylenko.gradle-git-properties' version '1.4.21' apply false
    id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
}

ext {
    // Project constants
    github_org = 'Discord4J'
    project_name = 'Discord4J'
    artifact_group = 'com.discord4j'
    project_version = '3.0.0-SNAPSHOT'
    project_description = 'Java interface for the Discord API'
    project_jdk = '1.8'

    // Dependencies
    reactor_bom_version = 'Bismuth-SR9'
    jackson_version = '2.9.4'
    jsr305_version = '3.0.2'
    junit_version = '4.12'
    logback_version = '1.3.0-alpha4'
    autoservice_version = '1.0-rc4'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    group = artifact_group
    version = project_version

    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk

    dependencyManagement {
        imports {
            mavenBom "io.projectreactor:reactor-bom:$reactor_bom_version"
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://jitpack.io' }
    }

    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }

    javadoc.options.encoding = 'UTF-8'

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

subprojects {
    apply plugin: 'com.gorylenko.gradle-git-properties'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.jfrog.artifactory'

    archivesBaseName = 'discord4j-' + project.name

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifactId archivesBaseName
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        userOrg = 'austinv11'
        repo = 'maven'
        websiteUrl = 'https://discord4j.com'
        issueTrackerUrl = 'https://github.com/Discord4J/Discord4J/issues'
        vcsUrl = 'https://github.com/Discord4J/Discord4J.git'
        licenses = ['LGPL-3.0']
        labels = ['discord', 'discord4j', 'd4j', 'reactor', 'nebula']
        publicDownloadNumbers = true
        attributes = [:]
        version {
            name = project.version
            vcsTag = project.version
            gpg {
                sign = true
            }
            if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                def sonatypeUsername = project.property('sonatypeUsername')
                def sonatypePassword = project.property('sonatypePassword')
                mavenCentralSync {
                    user = sonatypeUsername
                    password = sonatypePassword
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    resolve {
        repository {
            repoKey = 'jcenter'
        }
    }
    publish {
        repository {
            repoKey = 'oss-snapshot-local'

            username = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
        }
        defaults {
            publications 'maven'
            publishArtifacts = true
            properties = [:]
            publishPom = true
        }
    }
}

artifactoryPublish.skip = true

bintrayUpload.dependsOn build
artifactoryPublish.dependsOn build

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-4.7-all.zip'
}
